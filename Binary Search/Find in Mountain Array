# This is MountainArray's API interface.
# You should not implement it, or speculate about its implementation
# """
#class MountainArray:
#    def get(self, index: int) -> int:
#    def length(self) -> int:



# Find peak index (idx)
# Appply Binary Search
# 1. 0 to idx
# 2. (idx + 1) to (n-1)


class Solution:
    def findInMountainArray(self, target: int, arr: 'MountainArray') -> int:
        n = arr.length()

        def peakIndex(arr,l,r,target):
            l = 0
            r = n - 1

            while (l < r):
                mid = l + (r-l)//2
                if arr.get(mid) < arr.get(mid + 1):
                    l = mid + 1
                else:
                    r = mid
            return l


        def BinarySearch(arr,l,r,target):
            
            while (l <= r):
                mid = l + (r-l)//2
                if arr.get(mid) == target:
                    return mid
                if arr.get(mid) < target:
                    l = mid + 1
                else:
                    r = mid - 1
            
            return -1

        def reverseBS(arr,l,r,target):
            while (l <= r):
                mid = l + (r-l)//2
                if arr.get(mid) == target:
                    return mid
                if arr.get(mid) < target:
                    r = mid - 1
                else:
                    l = mid + 1
            
            return -1


        idx = peakIndex(arr, 0, n-1, target)
        ans_idx = BinarySearch(arr, 0, idx, target)
        if ans_idx != -1:
            return ans_idx
        ans_idx = reverseBS(arr, idx+1, n-1, target)
        return ans_idx


